{"ast":null,"code":"var _jsxFileName = \"/Users/Nikitarad/2048app/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#AD9D8F\",\n      width: \"max-content\",\n      height: \"max-content\",\n      margin: \"auto\",\n      padding: 5,\n      borderRadius: 5,\n      marginTop: 10,\n      position: \"relative\"\n    },\n    children: data.map((row, oneIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: row.map((digit, index) => /*#__PURE__*/_jsxDEV(Block, {\n          num: digit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, oneIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n} // Inizializer\n\n\n_s(App, \"TdqpzEC45dg0UjZKS1lngyPhfzE=\");\n\n_c = App;\n\nconst initialize = () => {\n  // console.log(\"CALLING INITIALIZE\");\n  let newGrid = cloneDeep(data);\n  console.log(newGrid);\n  addNumber(newGrid);\n  console.table(newGrid);\n  addNumber(newGrid);\n  console.table(newGrid);\n  setData(newGrid);\n}; // AddNumber - Add an item\n\n\nconst addNumber = newGrid => {\n  let added = false;\n  let gridFull = false;\n  let attempts = 0;\n\n  while (!added) {\n    if (gridFull) {\n      break;\n    }\n\n    let rand1 = Math.floor(Math.random() * 4);\n    let rand2 = Math.floor(Math.random() * 4);\n    attempts++;\n\n    if (newGrid[rand1][rand2] === 0) {\n      newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n      added = true;\n    }\n    /*\n    if (attempts > 50) {\n      gridFull = true;\n      let gameOverr = checkIfGameOver();\n      if (gameOverr) {\n        alert(\"game over\");\n        // setGameOver(true);\n      }\n      // setGameOver(true);\n    }*/\n\n  }\n}; // Swipe - Right, Left, Up, Down\n// CheckGameover\n// Reset\n\n\nuseEffect(() => {\n  initialize(); // eslint-disable-next-line\n}, []);\n\nconst Block = ({\n  num\n}) => {\n  const {\n    blockStyle\n  } = style;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: { ...blockStyle,\n      //background: getColors(num),\n      color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\"\n    },\n    children: num\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Block;\nconst style = {\n  blockStyle: {\n    height: 80,\n    width: 80,\n    background: \"lightgray\",\n    margin: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 45,\n    fontWeight: \"800\",\n    color: \"white\"\n  }\n};\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Block\");","map":{"version":3,"sources":["/Users/Nikitarad/2048app/front/src/App.js"],"names":["React","useState","useEffect","cloneDeep","App","data","setData","background","width","height","margin","padding","borderRadius","marginTop","position","map","row","oneIndex","display","digit","index","initialize","newGrid","console","log","addNumber","table","added","gridFull","attempts","rand1","Math","floor","random","rand2","Block","num","blockStyle","style","color","justifyContent","alignItems","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cloneDeep from \"lodash.clonedeep\";\n\n\n\nimport './App.css';\n\nfunction App() {\n  const [data,setData] = useState([\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n    [0,0,0,0],\n  ]\n    );\n\n\n    return(\n      <div \n      style={{\n        background: \"#AD9D8F\",\n        width: \"max-content\",\n        height: \"max-content\",\n        margin: \"auto\",\n        padding: 5,\n        borderRadius: 5,\n        marginTop: 10,\n        position: \"relative\",\n      }}\n      >\n          {data.map((row, oneIndex) => {\n              return (\n                <div style={{ display: \"flex\" }} key={oneIndex}>\n                  {row.map((digit, index) => (\n                    <Block num={digit} key={index} />\n                  ))}\n                </div>\n              );\n            })}\n      </div>\n    );\n}\n\n\n// Inizializer\nconst initialize = () => {\n  // console.log(\"CALLING INITIALIZE\");\n\n  let newGrid = cloneDeep(data);\n  console.log(newGrid);\n\n  addNumber(newGrid);\n  console.table(newGrid);\n  addNumber(newGrid);\n  console.table(newGrid);\n  setData(newGrid);\n};\n\n// AddNumber - Add an item\nconst addNumber = (newGrid) => {\n  let added = false;\n  let gridFull = false;\n  let attempts = 0;\n  while (!added) {\n    if (gridFull) {\n      break;\n    }\n\n    let rand1 = Math.floor(Math.random() * 4);\n    let rand2 = Math.floor(Math.random() * 4);\n    attempts++;\n    if (newGrid[rand1][rand2] === 0) {\n      newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\n      added = true;\n    \n    }\n    /*\n    if (attempts > 50) {\n      gridFull = true;\n      let gameOverr = checkIfGameOver();\n      if (gameOverr) {\n        alert(\"game over\");\n        // setGameOver(true);\n      }\n      // setGameOver(true);\n    }*/\n\n  }\n};\n  \n\n// Swipe - Right, Left, Up, Down\n\n// CheckGameover\n\n// Reset\n\nuseEffect(() => {\n  initialize();\n  // eslint-disable-next-line\n}, []);\n\n\nconst Block = ({num})=>{\n  const { blockStyle } = style;\n\n  return (\n    <div\n      style={{\n        ...blockStyle,\n        //background: getColors(num),\n        color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\",\n      }}\n    >\n      {num}\n      {/*num !== 0 ? num : \"\"*/}\n    </div>\n  );\n}\n\nconst style = {\n  blockStyle: {\n    height: 80,\n    width: 80,\n    background: \"lightgray\",\n    margin: 3,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 45,\n    fontWeight: \"800\",\n    color: \"white\",\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}